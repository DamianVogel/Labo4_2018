info gral: https://rubensa.wordpress.com/2017/10/24/understanding-angular-modules-ngmodule-and-their-scopes/



SIMULACRO DE PARCIAL
    -PROBAR INPUT Y OUTPUT
        -HACE NUEVOS COMPONENTES QUE UTILICEN EMITTERS


    SERVICIOS:
        -PREPARAR XAMPP
        -POSTMAN
        -BD
        




TP:
    -CORREGIR JUEGOS.
        -Velocidad Aritmetica OK.
        -Adivina el numero OK.
        -Anagrama.
        -Piedra Papel y Tijeta.
        -Juego Propio.
            ->Probar logica de juego un poco mas.
            ->Probar Snackbar para mensajes emergentes.
        -TA TE TI.

    -LOGICA DE JUEGO.
    -LOGIN
    -PROBAR RUTEO EN PROD.
        -CONTROLAR DESDE EL CODIGO COMO MENU-CARD
        info: https://github.com/angular-schule/angular-cli-ghpages   
        info: https://academia-binaria.com/paginas-y-rutas-angular-spa/
        -PARA PASAR A PRODUCCION.
            ng build --prod --base-href https://damianvogel.github.io/TP_LAV4_2017/    
    
    -SERVICIOS
    
    -BACK END / LOCAL STORAGE
    
    -VENTANAS MODALES
    
    -LIMPIAR console.logs


PRACTICAR:
    -RUTEAR
    -INPUT OUTPUT
        -Pedir a alguien github
    -SERVICIOS
    -NGMODEL <- para que sirve
    -NGFOR <- para que sirve


¿COMO RUTEAR?
    -COLOCAR EL ROUTER OUTLET  EN app.component.html 
        <router-outlet></router-outlet>                 <---- No lo tengo claro.
    
    -SE DEBE IMPORTAR EN EL MODULO PRINCIPAL EN app.module.ts
        import { RouterModule } from '@angular/router';
    
    -DECLARACION DE LAS RUTAS EN app.module.ts
        const miRuteo = [{path:'pruebaRuteo', component:RuteandoComponent}]

    -DENTRO DE NgModule:
    
        @NgModule({
            declarations: [
            AppComponent,
            TemaComponent,
            CuestionarioComponent,
            PreguntaComponent,
            RuteandoComponent
            ],
   
        imports: [
            BrowserModule,
            FormsModule,
            RouterModule.forRoot(miRuteo),        <---- DECLARACION DEL ROOTEO.
            ],

        exports: [
            RouterModule                          <---- NO SE SI ES NECESARIO. 
            ],

        providers: [],
        bootstrap: [AppComponent]
        })
        export class AppModule { }
    
    -EN LOS COMPONENTES nombredelcomponent.component.html PARA LINKEAR A OTRO COMPONENTE SE UTILIZA routerLink DENTRO DEL TAG:
        <a routerLink='/pruebaRuteo'> Link </a>

¿COMO UTILIZAR INPUT / OUTPUT?
    -IMPORTAR EN CADA COMPONENTE Input 
        import { Component, OnInit, Input } from '@angular/core';




¿COMO REALIZAR SERVICIOS?
    -IMPORTAR EN app.module.ts
        import { HttpModule } from '@angular/http';


    -COLOCAR DENTRO DEL NgModule

    -DENTRO DEL COMPONENTE (SERVICIO) HAY QUE IMPORTAR:
        import { Injectable } from '@angular/core';
        import {Http ,Response} from '@angular/http';
        import { catchError, map, tap } from 'rxjs/operators';
        import { Observable, Subject } from 'rxjs';

    -DENTRO DEL COMPONENTE (SERVICIO) UTLIZAR EL DECORADOR INJECTABLE:
        @Injectable()

    -DENTRO DEL CONSTRUCTOR DEL COMPONENTE (SERVICIO) INJECTAR EL SERVICIO HTTP:
        constructor(
            public _http : Http
        ){}

    *INFO EXTRA:
        -WEB PARA SIMULAR PETICIONES.
            reqres.in

    -IMPORTAR EN EL COMPONENT DONDE SE CONSUMIRA EL SERVICIO 
        import { nombreDelServicio } from '../rutaDel/servicio.service';

    -DENTRO DEL COMPONENTE AGREGARLO COMO PROVIDER
        @Component({
            providers: [nombreDelServicio]
        })

    -DENTRO DEL COMPONENT INYECTARLO EN EL constructor
        constructor(
            public _http : Http
        ){}






























ANOTACIONES
    20/09
    AJAX
    
    llamada asincronada
        4 posibilidades
            que vuelva
            que no vuelva
            correcta
            incorrecta



*En angular existe http 

Concepto
    -Crear servicio. Integro para toda la apicacion.
    -Cuando se le pega a un servicio, este servicio se divide en una ruta y segun lo que vemos por la api rest

    SERVICIO 1 SABE LA API
    SERVICIO 2 APUNTA A LA FUNCION
    SERVICIO 3 APUNTA A OTRA FUNCION

TEMAS PARA EL PRIMER PARCIAL
    INPUT OUTPUT
    ABM
    SERVICIO
    API rest










    

